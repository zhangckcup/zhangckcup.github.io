// 导入北京市2019年单数月数据
const x0 = [[7877,7932,8264,8363,7990],
[7800,7880,8049,8000,7883],
[7375,7206,7419,7483,7143],
[5582,5512,5730,5714,5596],
[5297,5219,5368,5460,5330],
[7480,7500,7500,7500,7406],
[3138,3003,3000,3033,3160],
[2803,2786,2800,2793,2800],
[4278,4144,4200,4200,4171],
[4166,4180,4008,4087,4006],
[4529,4406,4500,4500,4526],
[4338,4289,4343,4305,4200]]
x1 = [];

// 计算X1累加生成序列
for (let i in x0){
    x1.push([]);
    x0[i].forEach((undefined, id) => {   
        x1[i].push(x0[i].slice(0, id+1).reduce((p,c) => p+c,0));
    })
}

z = [];
// 计算Z紧邻均值序列
for (let i in x0){
    z.push([(x1[i][0]+x1[i][1])/2]);
}

    for i=2:4;
        z = [z;(x1(i+1,:)+x1(i,:))/2];
    end
    a =[1;1]
    for i =1:12;
        Y = x0(2:end,i);
        B = [-z(:,i),ones(4,1)];
        a = [a,(B'*B)^-1*B'*Y];
    end
    a = a(:,2:end);
    
    x1Hat = [x0(1,3:6)',zeros(4,5)];
    x0Hat = [x0(1,3:6)',zeros(4,5)];
    xl = [3,5,7,9,11,13];
    tit = ['������';'��̨��';'ʯ��ɽ';'������'];
    for i=1:4;
        subplot(2,2,i);
        plot(xl(1:5),x0(:,2+i),'ro');
        hold on;
        c = a(2,2+i)/a(1,2+i);
        for j=1:5;
            x1Hat(i,j+1) = (x0(1,2+i)-c)*exp(-a(1,2+i)*j)+c;
        end
        x0Hat(i,2:end) = [x1Hat(i,2:end)-x1Hat(i,1:end-1)];
        plot(xl,x0Hat(i,:),'b')
        title(tit(i,:));xlim([3,13])
    end